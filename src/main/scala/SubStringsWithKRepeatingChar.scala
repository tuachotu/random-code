/*
Give a string s, count the number of non-empty (contiguous) substrings that have the same number of 0's and 1's,
 and all the 0's and all the 1's in these substrings are grouped consecutively.

Substrings that occur multiple times are counted the number of times they occur.

Example 1:
Input: "00110011"
Output: 6
Explanation: There are 6 substrings that have equal number of consecutive 1's and 0's: "0011", "01", "1100", "10", "0011", and "01".

Notice that some of these substrings repeat and are counted the number of times they occur.

Also, "00110011" is not a valid substring because all the 0's (and 1's) are not grouped together.
 */
object SubStringsWithKRepeatingChar extends App {


  def countBinarySubstrings(s: String): Int = {
    val (_,_, total) = s.foldLeft((0,0,0)) { case ((count0, count1, total), c) =>
      if(count0 == 0 && count1 == 0) {
        if (c == '0') (count0 + 1, count1, total)
        else (count0, count1 + 1, total)
      } else {
        if (c == '0' ) {
          val newCount0 = count0 +  1
          if (count1 > 0) (newCount0, count1-1, total+1)
          else (newCount0, count1, total)
        } else {
          val newCount1 = count1 + 1
          if (count0 > 0) (count0-1, newCount1,total+1)
          else (count0,newCount1,total)
        }
      }
    }
    total
  }

  def countBinarySubstrings1(s: String): Int =
    s.foldLeft((0, 0, 0, 0)) {
      case ((zeros,0   , _, ttl), '0') => (zeros+1, 0     , 0, ttl)
      case ((0    ,ones, _, ttl), '1') => (0      , ones+1, 1, ttl)
      case ((1,ones, 0, ttl), '1') if ones > 1   => (0, 1, 1, ttl+1)
      case ((zeros,1, 1, ttl), '0') if zeros > 1  => ( 1, 0, 0, ttl+1)
      case ((zeros,ones, _, ttl), '0') => (zeros+1, ones-1, 0, ttl+1)
      case ((zeros,ones, _, ttl), '1') => (zeros-1, ones+1, 1, ttl+1)
      case _ => throw new Error("bad string")
    }._4

  val s = "1100111110110110011111111111110011001011111111100110111111111101010010011110001111110111101111110101110100001111" +
  "00111001110101100011101110101111111010110010111111010110110111111100111111100001111011010111111111101010100111110001000" +
  "000100110100110010111111011011111011111101001100111011110111000101110011001101000101110000000110100001110011111101011010" +
  "111011000001111011011110101011001010111110101111111111111010011010111110111100110101110111111111110011101101101001011011111" +
  "110111001101111111111000111011000010111111111110111001111101110001011111001111011111111011100011010101110110101110101101110001" +
  "110110111111011100011111010110011011111100111111011111110110111001110111011111011111110100111110011101011101111001101110010110010" +
  "101011000101110011011110111111011111111111001010110010011111010101111101010110110111111011111101101100100111100111100011101011110010" +
  "011001111111110010011110001111101110000100110111101101111001010111000111101000000111111000101100011011011111100011000111010110" +
  "011111110001110010100011101110111001111111111101111110111111001111011110111001111110111011111011111110111110101101011111011001101" +
  "110110111110000100010101011011011101111111011111110011011101100111101110001101110010101011111111110111001010110100111101111011101111" +
  "00110000001101111111111011110101100100101111111001111101110001011110101110111111111110000010111110111101111111111111001001000011011011" +
  "11110010000111101001111111101011010011110011011111000111010000010110011011011011111111110011111101100010111011010111011111111110101110101" +
  "0011011000101111110011010110111110010001010111110111110111101101011111110110111101011110010101100011010110001101100111111011001111101001011" +
  "1101100100011111111010011110110010111111101011011001111001001011101011111110111110111110100111001110111111000111011101001101110111110001111" +
  "1111101010101101011111111100110111100111101110110010110111100011111010110011111101101101000110110001010001111011100100111111111011111011111111" +
  "100101111001111110011010010010111111110110001001101111110011111010110011101111110110010000001111111000110111101101111010111110001011100011111" +
  "0111001000001111110110110100101001101010110011111111011110101111110001011100010111110101101101111111111111011010111000001101010011110101101111" +
  "0001101111010011011111111111111110001101101111001101001110011111111111011011100111010011011101001011011111111111111111000110111101111111011101" +
  "000110111011111010011111011111111011011111111101111100000010110110111101101111111111111101111100010111111110111111111111111111111110010011100" +
  "001101000100011011011011111111010111100011010010000111101110011111101010010110101010000011100111110101100111111011101111101101011111101111101" +
  "10101001110111100010000101111101101111101110110110100010101011011111111011111000100101111011000001101001011110101001111011101110111010011011" +
  "011110011101111011011111010001101101101111011110110111010100011110100111111101110110111000011111111111110001110101010011100101000110110111011" +
  "110101111100111110101011010101011111100101011110101110011100000111101000111101101111010011100111011101101011111110001011110101111101111100011" +
  "11110100100001101010001011111110010110110000101111110110111101000101111011111011001100000111111111101010010100111100111110111100011111101111" +
  "011111100111110000101111011101001001111001101110100100101101111001111111111000110111111101010110011010010011001000111100010100111111001101111" +
  "1100111110001111010111011111101011111011110101101111111011110111111111111000011011001101100111111111011111111010110100101101100111010" +
  "00111101111110111111011111111110110011100001111110001111011100111111101011111110100110000110011001011111001001110111011110101101101011" +
  "01101101001111011101110010101101100111000100110101101011100000110101111111110101100111100100110000111111010100111111101110000011110011" +
  "01010100101111011101110111110101101011111011001111111100110111010111011111100110001101110101100111111111111001110111011110111111011111" +
  "1001110101110010110010011111111111101101110011111111110010111111100111101010001101111100100001011110111111101111110011111011101010111111" +



 /* println(countBinarySubstrings("1111110100000"))
  println(countBinarySubstrings("000111000"))
  println(countBinarySubstrings("000111"))
  println(countBinarySubstrings("001100011"))
//  println(countBinarySubstrings(s))

  println


  println(countBinarySubstrings1("1111110100000"))
  println(countBinarySubstrings1("000111000"))
  println(countBinarySubstrings1("000111"))
  println(countBinarySubstrings1("001100011"))
*/

  // 1100111110110 - 2 + 2 + 1
  println(countBinarySubstrings1("1110011100110010001"))
}

